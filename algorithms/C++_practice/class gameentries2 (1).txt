#include <iostream>
#include <string>
using namespace std;

class GameEntry
{
protected:
	string names;
	int score;
public:
	string getNames() const { return names; }
	int getScore() const { return score; }
	void setNames(const string &n) { names = n; }
	void setScore(const int &s) { score = s; }
	GameEntry()
	{
		names = "   ";
		score = 0;
	}
	GameEntry(const string &n, const int &s)
	{
		names = n;
		score = s;

	}
};
class Scores
{
private:
	int maxEntries;
	int numEntries;
	GameEntry *entries;
public:
	Scores()
	{
		maxEntries = 10;
		numEntries = 0;
		entries = new GameEntry[10];

	}
	Scores(int m)
	{
		maxEntries = m;
		numEntries = 0;
		entries = new GameEntry[m];
	}
	~Scores()
	{
		delete[]entries;
		entries = nullptr;
	}
	void add(const GameEntry &e)
	{
		if (numEntries == maxEntries)
		{
			cout << "Array is full.\n";
			return;
		}
		else
		{
			entries[numEntries] = e;
			numEntries++;

			/*for (int i = 0; i < numEntries; i++)
			{
				if (e.getScore() < entries[i].getScore())
				{
					entries[i + 1] = entries[i];
					entries[i] = e;

				}
			}*/
		}
		
	}
	void display()
	{
		for (int i = 0; i < numEntries; i++)
			cout << entries[i].getNames() << " with socre of " << entries[i].getScore() << endl;
	}
	void remove(const string &n)
	{
		for (int i = 0; i < numEntries; i++)
			if (entries[i].getNames() == n)
			{
				for (int j = 0; j < numEntries-1; j++)
					entries[i] = entries[i + 1];
				numEntries--;
				
			}
	}
};
int main()
{
	GameEntry x("Ho Chen", 450), y("Steven", 441);
	GameEntry a("A B", 455), b("C D", 401);
	//cout << "Name: " << x.getNames() << endl;
	Scores blue(12);
	blue.add(x);
	blue.add(y);
	blue.add(a);
	blue.add(b);
	blue.display();
	cout << endl;
	blue.remove("A B");
	blue.display();

	cin.ignore();
	system("pause");
	return 0;
}
 
